syntax = "proto3";

import "google/protobuf/timestamp.proto";
import "google/protobuf/empty.proto";

package change_events;

message CpuChangeEvent {
    float usage = 1;
    float temp = 2;
}

message MemoryChangeEvent {
    uint64 total = 1;
    uint64 free = 2;
}
 
message Mount {
    string device_name = 1;
    string mount_location = 2;
    uint64 total = 3;
    uint64 free = 4;
    string fs_type = 5;
}

message NetworkDevice {
    string name = 1;
    uint64 bytes_received = 2;
    uint64 bytes_sent = 3;
}

message BatteryChangeEvent {
    uint64 remaining_seconds = 1;
    float remaining_capacity = 2;
    bool power_connected = 3;
}

message SystemInfo {
    google.protobuf.Timestamp boot_time = 1;
}

enum EventType {
    ADD = 0;
    UPDATE = 1;
    DELETE = 2;
}

message ChangeEvent {
    EventType event_type = 1;
    oneof event {
        change_events.CpuChangeEvent cpu = 2;
        change_events.MemoryChangeEvent memory = 3;
        change_events.Mount mount = 4;
        change_events.NetworkDevice network_device = 5;
        change_events.BatteryChangeEvent battery = 6;
        change_events.SystemInfo system_info = 7;
    }
}

message ChangeEventBatch {
    repeated ChangeEvent events = 1;
    int64 machine_id = 2;
}

message InitialStateRequest {
    int64 machine_id = 1;
}

message InitialStateResponse {
    repeated Mount mounts = 1;
    repeated NetworkDevice network_devices = 2;
}

service EventService {
    // TODO register machine if not already done,
    // check if a user already owns the machine too
    // if so don't allow to submit data without user auth
    rpc InitialState(InitialStateRequest) returns (InitialStateResponse);
    rpc SendEvents(ChangeEventBatch) returns (google.protobuf.Empty) {}
}
